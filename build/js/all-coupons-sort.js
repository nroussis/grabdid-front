var mainListSelector=".coupon--paginated",nextBtn=".pagination__next",prevBtn=".pagination__prev",elsOnPage=3,scrollTo="allcoupons",list=document.querySelectorAll(mainListSelector),currentPage=1;function buttonsCheck(){var t=document.querySelectorAll(".js-inlist");1===currentPage?$(prevBtn).attr("disabled",!0):$(prevBtn).attr("disabled",!1),$("[data-item="+(t.length-1)+"]").hasClass("js-shown")?$(nextBtn).attr("disabled",!0):$(nextBtn).attr("disabled",!1)}function initList(){currentPage=1,$(mainListSelector).each(function(t){$(this).attr("data-item",t),$(this).addClass("js-inlist")});for(var t=0;t<elsOnPage&&void 0!==list[t];t++)list[t].classList.add("js-shown");buttonsCheck()}initList(),$(nextBtn).on("click",function(){$(".js-shown").each(function(t){$("[data-item="+(t+elsOnPage*currentPage)+"]").toggleClass("js-shown"),$(this).toggleClass("js-shown")}),currentPage++,buttonsCheck(),$("html, body").animate({scrollTop:$("#"+scrollTo).offset().top},500)}),$(prevBtn).on("click",function(){$(".js-shown").each(function(t){if(0===t){for(var s=$(this).attr("data-item"),a=s;s-elsOnPage<=a;--a)$("[data-item="+a+"]").toggleClass("js-shown");$(this).toggleClass("js-shown")}$(this).toggleClass("js-shown")}),currentPage--,buttonsCheck(),$("html, body").animate({scrollTop:$("#"+scrollTo).offset().top},500)}),$(".alpha__filter").on("click",function(){var t=$(this).attr("data-l"),s=".coupon-"+t;function a(){$(".coupon").each(function(){$(this).attr("data-item",""),$(this).removeClass("js-shown"),$(this).removeClass("js-inlist")})}if($(".alpha__filter--checked").removeClass("alpha__filter--checked"),$(this).addClass("alpha__filter--checked"),"all"!==t&&"num"!==t)a(),$(s).each(function(t){$(this).attr("data-item",t),$(this).addClass("js-inlist"),t<elsOnPage&&$(this).addClass("js-shown")}),currentPage=1,buttonsCheck();else if("all"===t)a(),initList();else if("num"===t){a();for(var e=[],n=0;n<9;n++)$(".coupon-"+n).each(function(){$(this).attr("data-num",n),e.push($(this))});console.log(e),e.sort(function(t,s){t=parseInt(t.attr("data-num")),s=parseInt(s.attr("data-num"))}),console.log(e);for(n=0;n<e.length;n++)e[n].attr("data-item",n),e[n].addClass("js-inlist"),n<elsOnPage&&e[n].addClass("js-shown");currentPage=1,buttonsCheck()}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFsbC1jb3Vwb25zLXNvcnQuanMiXSwibmFtZXMiOlsibWFpbkxpc3RTZWxlY3RvciIsIm5leHRCdG4iLCJwcmV2QnRuIiwiZWxzT25QYWdlIiwic2Nyb2xsVG8iLCJsaXN0IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yQWxsIiwiY3VycmVudFBhZ2UiLCJidXR0b25zQ2hlY2siLCJpbmxpc3RzIiwiJCIsImF0dHIiLCJsZW5ndGgiLCJoYXNDbGFzcyIsImluaXRMaXN0IiwiZWFjaCIsImkiLCJ0aGlzIiwiYWRkQ2xhc3MiLCJ1bmRlZmluZWQiLCJjbGFzc0xpc3QiLCJhZGQiLCJvbiIsInRvZ2dsZUNsYXNzIiwiYW5pbWF0ZSIsInNjcm9sbFRvcCIsIm9mZnNldCIsInRvcCIsImluZCIsImlwIiwiZmlsdGVyIiwidGFyZ2V0IiwiY2xlYXJJdGVtcyIsInJlbW92ZUNsYXNzIiwiZWxzIiwicHVzaCIsImNvbnNvbGUiLCJsb2ciLCJzb3J0IiwieCIsInkiLCJwYXJzZUludCJdLCJtYXBwaW5ncyI6IkFBR1EsSUFBSUEsaUJBQW1CLHFCQUduQkMsUUFBVSxvQkFDVkMsUUFBVSxvQkFHVkMsVUFBWSxFQUdaQyxTQUFXLGFBR1hDLEtBQU9DLFNBQVNDLGlCQUFpQlAsa0JBQ2pDUSxZQUFjLEVBS2xCLFNBQVNDLGVBQ0wsSUFBSUMsRUFBVUosU0FBU0MsaUJBQWlCLGNBRXBCLElBQWhCQyxZQUNBRyxFQUFFVCxTQUFTVSxLQUFLLFlBQVksR0FFaENELEVBQUVULFNBQVNVLEtBQUssWUFBWSxHQUd4QkQsRUFBRSxlQUFpQkQsRUFBUUcsT0FBUyxHQUFLLEtBQUtDLFNBQVMsWUFDdkRILEVBQUVWLFNBQVNXLEtBQUssWUFBWSxHQUU1QkQsRUFBRVYsU0FBU1csS0FBSyxZQUFZLEdBTXBDLFNBQVNHLFdBRVRQLFlBQWMsRUFHZEcsRUFBRVgsa0JBQWtCZ0IsS0FBSyxTQUFTQyxHQUMxQk4sRUFBRU8sTUFBTU4sS0FBSyxZQUFhSyxHQUMxQk4sRUFBRU8sTUFBTUMsU0FBUyxlQUl6QixJQUFLLElBQUlGLEVBQUksRUFBR0EsRUFBSWQsZ0JBQ0FpQixJQUFaZixLQUFLWSxHQURrQkEsSUFJM0JaLEtBQUtZLEdBQUdJLFVBQVVDLElBQUksWUFFdEJiLGVBR0pNLFdBS0FKLEVBQUVWLFNBQVNzQixHQUFHLFFBQVEsV0FFbEJaLEVBQUUsYUFBYUssS0FBSyxTQUFTQyxHQUN6Qk4sRUFBRSxlQUFpQk0sRUFBSWQsVUFBWUssYUFBZSxLQUFLZ0IsWUFBWSxZQUNuRWIsRUFBRU8sTUFBTU0sWUFBWSxjQUd4QmhCLGNBRUFDLGVBQ0FFLEVBQUUsY0FBY2MsUUFBUSxDQUFFQyxVQUFXZixFQUFFLElBQU1QLFVBQVV1QixTQUFTQyxLQUFPLE9BRzNFakIsRUFBRVQsU0FBU3FCLEdBQUcsUUFBUyxXQUNuQlosRUFBRSxhQUFhSyxLQUFLLFNBQVNDLEdBQ3pCLEdBQVUsSUFBTkEsRUFBUyxDQUViLElBREksSUFBSVksRUFBTWxCLEVBQUVPLE1BQU1OLEtBQUssYUFDbEJrQixFQUFLRCxFQUFZQSxFQUFNMUIsV0FBYjJCLElBQTJCQSxFQUMxQ25CLEVBQUUsY0FBZ0JtQixFQUFLLEtBQUtOLFlBQVksWUFFMUNiLEVBQUVPLE1BQU1NLFlBQVksWUFFdEJiLEVBQUVPLE1BQU1NLFlBQVksY0FFeEJoQixjQUVBQyxlQUNBRSxFQUFFLGNBQWNjLFFBQVEsQ0FBRUMsVUFBV2YsRUFBRSxJQUFNUCxVQUFVdUIsU0FBU0MsS0FBTyxPQUszRWpCLEVBQUUsa0JBQWtCWSxHQUFHLFFBQVMsV0FDNUIsSUFBSVEsRUFBU3BCLEVBQUVPLE1BQU1OLEtBQUssVUFDdEJvQixFQUFTLFdBQWFELEVBTTFCLFNBQVNFLElBRUp0QixFQVBjLFdBT0VLLEtBQUssV0FDbEJMLEVBQUVPLE1BQU1OLEtBQUssWUFBYSxJQUMxQkQsRUFBRU8sTUFBTWdCLFlBQVksWUFDcEJ2QixFQUFFTyxNQUFNZ0IsWUFBWSxlQUs1QixHQWJBdkIsRUFBRSwyQkFBMkJ1QixZQUFZLDBCQUN6Q3ZCLEVBQUVPLE1BQU1DLFNBQVMsMEJBWUYsUUFBWFksR0FBK0IsUUFBWEEsRUFFcEJFLElBSUF0QixFQUFFcUIsR0FBUWhCLEtBQUssU0FBU0MsR0FDcEJOLEVBQUVPLE1BQU1OLEtBQUssWUFBYUssR0FDMUJOLEVBQUVPLE1BQU1DLFNBQVMsYUFDakJGLEVBQUlkLFdBQ0pRLEVBQUVPLE1BQU1DLFNBQVMsY0FJckJYLFlBQWMsRUFDZEMsb0JBQ08sR0FBZSxRQUFYc0IsRUFFUEUsSUFDQWxCLGdCQUNHLEdBQWUsUUFBWGdCLEVBQWtCLENBSTdCRSxJQUlBLElBREEsSUFBSUUsRUFBTSxHQUNEbEIsRUFBSSxFQUFHQSxFQUFJLEVBQUdBLElBQ25CTixFQUFFLFdBQWFNLEdBQUdELEtBQUssV0FDbkJMLEVBQUVPLE1BQU1OLEtBQUssV0FBWUssR0FDekJrQixFQUFJQyxLQUFLekIsRUFBRU8sU0FHbkJtQixRQUFRQyxJQUFJSCxHQUNaQSxFQUFJSSxLQUFLLFNBQVNDLEVBQUVDLEdBQ2hCRCxFQUFJRSxTQUFTRixFQUFFNUIsS0FBSyxhQUNwQjZCLEVBQUlDLFNBQVNELEVBQUU3QixLQUFLLGVBSXhCeUIsUUFBUUMsSUFBSUgsR0FJWixJQUFTbEIsRUFBSSxFQUFHQSxFQUFJa0IsRUFBSXRCLE9BQVFJLElBQzVCa0IsRUFBSWxCLEdBQUdMLEtBQUssWUFBYUssR0FDekJrQixFQUFJbEIsR0FBR0UsU0FBUyxhQUNoQkYsRUFBSWQsV0FDSmdDLEVBQUlsQixHQUFHRSxTQUFTLFlBR3BCWCxZQUFjLEVBQ2RDIiwiZmlsZSI6ImFsbC1jb3Vwb25zLXNvcnQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIgLy9TZXR0aW5ncyBmb3IgcGFnaW5hdGluZyBlbGVtZW50c1xyXG5cclxuICAgICAgICAvLzEuIFNlbGVjdG9yIGZvciBpdGVtcyB0byBiZSBwYWdpbmF0ZWQgXHJcbiAgICAgICAgdmFyIG1haW5MaXN0U2VsZWN0b3IgPSAoXCIuY291cG9uLS1wYWdpbmF0ZWRcIik7XHJcblxyXG4gICAgICAgIC8vMi4gTmV4dCAtIHByZXYgYnV0dG9ucyBzZWxlY3RvclxyXG4gICAgICAgIHZhciBuZXh0QnRuID0gXCIucGFnaW5hdGlvbl9fbmV4dFwiO1xyXG4gICAgICAgIHZhciBwcmV2QnRuID0gXCIucGFnaW5hdGlvbl9fcHJldlwiO1xyXG5cclxuICAgICAgICAvLzMuIFNldCBtYXggZWxlbWVudHMgcGVyIG9uZSBcInBhZ2VcIiBcclxuICAgICAgICB2YXIgZWxzT25QYWdlID0gMztcclxuXHJcbiAgICAgICAgLy80LiBTZXQgbWFpbiBjb250YWluZXIgc2VsZWN0b3IgdG8gd2hpY2ggcGFnZSB3aWxsIGJlIHNjcm9sbGVkIHdoZW4gbmV4dC1wcmV2IHBhZ2UgY2FsbGVkXHJcbiAgICAgICAgdmFyIHNjcm9sbFRvID0gXCJhbGxjb3Vwb25zXCI7ICAvL0lEIGhlcmVcclxuXHJcblxyXG4gICAgICAgIHZhciBsaXN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChtYWluTGlzdFNlbGVjdG9yKTtcclxuICAgICAgICB2YXIgY3VycmVudFBhZ2UgPSAxO1xyXG5cclxuXHJcbiAgICAvL0NoZWNrIGZvciBidXR0b25zXHJcblxyXG4gICAgICAgIGZ1bmN0aW9uIGJ1dHRvbnNDaGVjaygpIHtcclxuICAgICAgICAgICAgdmFyIGlubGlzdHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLmpzLWlubGlzdFwiKTtcclxuXHJcbiAgICAgICAgICAgIGlmIChjdXJyZW50UGFnZSA9PT0gMSkge1xyXG4gICAgICAgICAgICAgICAgJChwcmV2QnRuKS5hdHRyKFwiZGlzYWJsZWRcIiwgdHJ1ZSk7XHJcbiAgICAgICAgICAgIH1cdGVsc2Uge1xyXG4gICAgICAgICAgICAkKHByZXZCdG4pLmF0dHIoXCJkaXNhYmxlZFwiLCBmYWxzZSlcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBpZiAoJChcIltkYXRhLWl0ZW09XCIgKyAoaW5saXN0cy5sZW5ndGggLSAxKSArIFwiXVwiKS5oYXNDbGFzcyhcImpzLXNob3duXCIpKSB7XHJcbiAgICAgICAgICAgICAgICAkKG5leHRCdG4pLmF0dHIoXCJkaXNhYmxlZFwiLCB0cnVlKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICQobmV4dEJ0bikuYXR0cihcImRpc2FibGVkXCIsIGZhbHNlKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAvL0luaXRpYXRlIHBhZ2luYXRpb25cclxuXHJcbiAgICAgICAgZnVuY3Rpb24gaW5pdExpc3QoKSB7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgIGN1cnJlbnRQYWdlID0gMTtcclxuXHJcblxyXG4gICAgICAgICQobWFpbkxpc3RTZWxlY3RvcikuZWFjaChmdW5jdGlvbihpKSB7XHJcbiAgICAgICAgICAgICAgICAkKHRoaXMpLmF0dHIoXCJkYXRhLWl0ZW1cIiwgaSk7XHJcbiAgICAgICAgICAgICAgICAkKHRoaXMpLmFkZENsYXNzKFwianMtaW5saXN0XCIpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgXHJcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBlbHNPblBhZ2U7IGkrKykge1xyXG4gICAgICAgICAgICBpZiAobGlzdFtpXSA9PT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGxpc3RbaV0uY2xhc3NMaXN0LmFkZChcImpzLXNob3duXCIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGJ1dHRvbnNDaGVjaygpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaW5pdExpc3QoKTtcclxuXHJcblxyXG5cclxuXHJcbiAgICAgICAgJChuZXh0QnRuKS5vbihcImNsaWNrXCIsZnVuY3Rpb24oKXtcclxuXHJcbiAgICAgICAgICAgICQoXCIuanMtc2hvd25cIikuZWFjaChmdW5jdGlvbihpKSB7XHJcbiAgICAgICAgICAgICAgICAkKFwiW2RhdGEtaXRlbT1cIiArIChpICsgZWxzT25QYWdlICogY3VycmVudFBhZ2UpICsgXCJdXCIpLnRvZ2dsZUNsYXNzKFwianMtc2hvd25cIik7XHJcbiAgICAgICAgICAgICAgICAkKHRoaXMpLnRvZ2dsZUNsYXNzKFwianMtc2hvd25cIik7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIFxyXG4gICAgICAgICAgICBjdXJyZW50UGFnZSsrO1xyXG4gICAgICAgICAgICAvL0NoZWNrc1xyXG4gICAgICAgICAgICBidXR0b25zQ2hlY2soKTtcclxuICAgICAgICAgICAgJChcImh0bWwsIGJvZHlcIikuYW5pbWF0ZSh7IHNjcm9sbFRvcDogJCgnIycgKyBzY3JvbGxUbykub2Zmc2V0KCkudG9wIH0sIDUwMCk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICQocHJldkJ0bikub24oXCJjbGlja1wiLCBmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICAkKFwiLmpzLXNob3duXCIpLmVhY2goZnVuY3Rpb24oaSl7XHJcbiAgICAgICAgICAgICAgICBpZiAoaSA9PT0gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBpbmQgPSAkKHRoaXMpLmF0dHIoXCJkYXRhLWl0ZW1cIik7XHJcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpcCA9IGluZDsgaXAgPj0gKGluZCAtIGVsc09uUGFnZSk7IC0taXApIHtcclxuICAgICAgICAgICAgICAgICAgICAkKFwiW2RhdGEtaXRlbT1cIiArIGlwICsgXCJdXCIpLnRvZ2dsZUNsYXNzKFwianMtc2hvd25cIik7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICQodGhpcykudG9nZ2xlQ2xhc3MoXCJqcy1zaG93blwiKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICQodGhpcykudG9nZ2xlQ2xhc3MoXCJqcy1zaG93blwiKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIGN1cnJlbnRQYWdlLS07XHJcbiAgICAgICAgLy9DaGVja3NcclxuICAgICAgICAgICAgYnV0dG9uc0NoZWNrKCk7XHJcbiAgICAgICAgICAgICQoXCJodG1sLCBib2R5XCIpLmFuaW1hdGUoeyBzY3JvbGxUb3A6ICQoJyMnICsgc2Nyb2xsVG8pLm9mZnNldCgpLnRvcCB9LCA1MDApO1xyXG5cclxuICAgICAgICB9KTsgLy9FbmQgb2YgcGFnaW5hdGlvblxyXG5cclxuICAgICAgICAvL1NvcnRpbmdcclxuICAgICAgICAkKFwiLmFscGhhX19maWx0ZXJcIikub24oXCJjbGlja1wiLCBmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICB2YXIgZmlsdGVyID0gJCh0aGlzKS5hdHRyKFwiZGF0YS1sXCIpO1xyXG4gICAgICAgICAgICB2YXIgdGFyZ2V0ID0gXCIuY291cG9uLVwiICsgZmlsdGVyO1xyXG4gICAgICAgICAgICB2YXIgYmFzaWNFbGVtZW50ID0gXCIuY291cG9uXCI7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAkKFwiLmFscGhhX19maWx0ZXItLWNoZWNrZWRcIikucmVtb3ZlQ2xhc3MoXCJhbHBoYV9fZmlsdGVyLS1jaGVja2VkXCIpO1xyXG4gICAgICAgICAgICAkKHRoaXMpLmFkZENsYXNzKFwiYWxwaGFfX2ZpbHRlci0tY2hlY2tlZFwiKTtcclxuXHJcbiAgICAgICAgICAgIGZ1bmN0aW9uIGNsZWFySXRlbXMoKSB7XHJcbiAgICAgICAgICAgICAgICAgLy9IaWRlIGFsbCB0aGUgZWxlbWVudHNcclxuICAgICAgICAgICAgICAgICAkKGJhc2ljRWxlbWVudCkuZWFjaChmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICAgICAgICAgICQodGhpcykuYXR0cihcImRhdGEtaXRlbVwiLCBcIlwiKTtcclxuICAgICAgICAgICAgICAgICAgICAkKHRoaXMpLnJlbW92ZUNsYXNzKFwianMtc2hvd25cIik7XHJcbiAgICAgICAgICAgICAgICAgICAgJCh0aGlzKS5yZW1vdmVDbGFzcyhcImpzLWlubGlzdFwiKTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgaWYgKGZpbHRlciAhPT0gXCJhbGxcIiAmJiBmaWx0ZXIgIT09IFwibnVtXCIpIHtcclxuICAgICAgICAgICAgICAgIC8vSGlkZSBhbGwgdGhlIGVsZW1lbnRzXHJcbiAgICAgICAgICAgICAgICBjbGVhckl0ZW1zKCk7XHJcbiAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAvL1Nob3cgZmlsdGVyZWQgb25seVxyXG4gICAgICAgICAgICAgICAgJCh0YXJnZXQpLmVhY2goZnVuY3Rpb24oaSl7XHJcbiAgICAgICAgICAgICAgICAgICAgJCh0aGlzKS5hdHRyKFwiZGF0YS1pdGVtXCIsIGkpO1xyXG4gICAgICAgICAgICAgICAgICAgICQodGhpcykuYWRkQ2xhc3MoXCJqcy1pbmxpc3RcIik7XHJcbiAgICAgICAgICAgICAgICBpZiAoaSA8IGVsc09uUGFnZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICQodGhpcykuYWRkQ2xhc3MoXCJqcy1zaG93blwiKTtcclxuICAgICAgICAgICAgICAgIH0gXHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgY3VycmVudFBhZ2UgPSAxO1xyXG4gICAgICAgICAgICAgICAgYnV0dG9uc0NoZWNrKCk7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGZpbHRlciA9PT0gXCJhbGxcIikge1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIFNob3cgYWxsIGVsZW1lbnRzXHJcbiAgICAgICAgICAgICAgICAgICAgY2xlYXJJdGVtcygpO1xyXG4gICAgICAgICAgICAgICAgICAgIGluaXRMaXN0KCk7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGZpbHRlciA9PT0gXCJudW1cIikge1xyXG4gICAgICAgICAgICAgICAgLy9TaG93IGFsbCBudW1lcmljIGVsZW1lbnRzXHJcblxyXG4gICAgICAgICAgICAgICAgLy8xLkhpZGUgYWxsIHRoZSBlbGVtZW50c1xyXG4gICAgICAgICAgICAgICAgY2xlYXJJdGVtcygpO1xyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAvLzIuIENvbGxlY3QgdGhlbSBpbnRvIGFycmF5IGFuZCBzb3J0IGl0XHJcbiAgICAgICAgICAgICAgICB2YXIgZWxzID0gW107XHJcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IDk7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgICAgICQoXCIuY291cG9uLVwiICsgaSkuZWFjaChmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJCh0aGlzKS5hdHRyKFwiZGF0YS1udW1cIiwgaSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGVscy5wdXNoKCQodGhpcykpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coZWxzKTtcclxuICAgICAgICAgICAgICAgIGVscy5zb3J0KGZ1bmN0aW9uKHgseSl7XHJcbiAgICAgICAgICAgICAgICAgICAgeCA9IHBhcnNlSW50KHguYXR0cihcImRhdGEtbnVtXCIpKTtcclxuICAgICAgICAgICAgICAgICAgICB5ID0gcGFyc2VJbnQoeS5hdHRyKFwiZGF0YS1udW1cIikpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICB4ID4geSA/IDEgOiAoeCA8IHkgPyAtMSA6IDApO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlbHMpO1xyXG5cclxuXHJcbiAgICAgICAgICAgICAgICAvLzMuIFNob3cgZmlsdGVyZWRcclxuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZWxzLmxlbmd0aDsgaSsrICkge1xyXG4gICAgICAgICAgICAgICAgICAgIGVsc1tpXS5hdHRyKFwiZGF0YS1pdGVtXCIsIGkpO1xyXG4gICAgICAgICAgICAgICAgICAgIGVsc1tpXS5hZGRDbGFzcyhcImpzLWlubGlzdFwiKTtcclxuICAgICAgICAgICAgICAgIGlmIChpIDwgZWxzT25QYWdlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZWxzW2ldLmFkZENsYXNzKFwianMtc2hvd25cIik7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBjdXJyZW50UGFnZSA9IDE7XHJcbiAgICAgICAgICAgICAgICBidXR0b25zQ2hlY2soKTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICB9KTsiXX0=
