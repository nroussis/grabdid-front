$(document).ready(function(){!function(){var a=".invite__row-inv",s="#invitedNext",i="#invitedPrev",t="tabs",e=".js-shown-tr",o="js-shown-tr",l=document.querySelectorAll(a),n=1;function d(){var t=document.querySelectorAll(".js-inlist");1===n?$(i).attr("disabled",!0):$(i).attr("disabled",!1),$("[data-item="+(t.length-1)+"]").hasClass(o)?$(s).attr("disabled",!0):$(s).attr("disabled",!1)}!function(){n=1,$(a).each(function(t){$(this).attr("data-item",t),$(this).addClass("js-inlist")});for(var t=0;t<2&&void 0!==l[t];t++)l[t].classList.add(o);d()}(),$(s).on("click",function(){$(e).each(function(t){$("[data-item="+(t+2*n)+"]").toggleClass(o),$(this).toggleClass(o)}),n++,d(),$("html, body").animate({scrollTop:$("#"+t).offset().top},500)}),$(i).on("click",function(){$(e).each(function(t){if(0===t){for(var a=$(this).attr("data-item"),s=a;a-2<=s;--s)$("[data-item="+s+"]").toggleClass(o);$(this).toggleClass(o)}$(this).toggleClass(o)}),n--,d(),$("html, body").animate({scrollTop:$("#"+t).offset().top},500)})}(),function(){var a=".invite__row-su",s="#signedupNext",i="#signedupPrev",t="tabs",e=".js-shown-tr",o="js-shown-tr",l=document.querySelectorAll(a),n=1;function d(){var t=document.querySelectorAll(".js-inlist");1===n?$(i).attr("disabled",!0):$(i).attr("disabled",!1),$("[data-item="+(t.length-1)+"]").hasClass(o)?$(s).attr("disabled",!0):$(s).attr("disabled",!1)}!function(){n=1,$(a).each(function(t){$(this).attr("data-item",t),$(this).addClass("js-inlist")});for(var t=0;t<2&&void 0!==l[t];t++)l[t].classList.add(o);d()}(),$(s).on("click",function(){$(e).each(function(t){$("[data-item="+(t+2*n)+"]").toggleClass(o),$(this).toggleClass(o)}),n++,d(),$("html, body").animate({scrollTop:$("#"+t).offset().top},500)}),$(i).on("click",function(){$(e).each(function(t){if(0===t){for(var a=$(this).attr("data-item"),s=a;a-2<=s;--s)$("[data-item="+s+"]").toggleClass(o);$(this).toggleClass(o)}$(this).toggleClass(o)}),n--,d(),$("html, body").animate({scrollTop:$("#"+t).offset().top},500)})}()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
